.hykkt_script_template:
 script:
    - |
      set -xv
      export WORKDIR="$HOME/gitlab/$CI_JOB_ID"
      if [[ ! -d "$WORKDIR" ]]; then
        mkdir -p "$WORKDIR"
        cp -R ./* "$WORKDIR"
      fi
      cd $WORKDIR
      [ -f output ] && rm output
      touch output
      tail -f output &
      tailpid=$!
      sinfo -l | grep $SLURM_Q

      #test build script
      export jobid=$(echo $jobid | cut -f4 -d' ')
      echo $jobid > "$WORKDIR/jobid"
      res=1
      while :;
      do
        if [[ "$(awk 'BEGIN{i=0}/BUILD_STATUS/{i++}END{print i}' output)" != "0" ]]; then
          kill $tailpid
          echo 'Last tail of build output:'
          tail -n 200 output
          res=$(grep BUILD_STATUS output | tail -n 1 | cut -f2 -d':')
          break
        fi
        sleep 30
      done
      rm "$WORKDIR/jobid"
      echo "Finished job with code $res"
      exit $res

# CI constraints for every branch
workflow:
  rules:
      # Only run if source is an open merge request or a branch push
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

.pnnl_tags_template:
  tags:
    - k8s
    - ikp
    - exasgd
    - marianas

.pnnl_nonhpc_tags:
  tags:
    - k8s
    - ikp
    - exasgd
    - basic

hykkt-test-deception:
  stage: test
  needs: []
  variables:
    SLURM_Q: "a100_shared"
    MY_CLUSTER: "deception"
  extends:
    - .hykkt_script_template

hykkt-test-newell:
  stage: test
  needs: []
  variables:
    SLURM_Q: "newell_shared"
    MY_CLUSTER: "newell"
  extends:
  - .pnnl_tags_template
  - .hykkt_script_template

.report-status:
  variables:
    GIT_STRATEGY: none
    STATUS_PROJECT: ORNL/hykkt
    STATUS_NAME: PNNL CI
  tags:
    - basic
  script:
    # TODO:
    # - create access token with 'repo:status scope' in Hykkt
    # - Add PNNL GItlab Ci variable with environment scope (same environment name as below) containing Github authorization token
    - curl -X POST -H @${GITHUB_CURL_HEADERS} https://api.github.com/repos/${STATUS_PROJECT}/statuses/${CI_COMMIT_SHA}?state=${CI_JOB_NAME}\&context=${STATUS_NAME}\&target_url=${CI_PIPELINE_URL}
  environment:
      name: reporting-gitlab
pending:
  extends:
    - .report-status
  stage: .pre

success:
  extends:
    - .report-status
  stage: .post

failure:
  stage: .post
  extends:
    - .report-status
  rules:
    - when: on_failure  
